{"version":3,"sources":["Components/SearchForm.jsx","Components/LyricsModal.jsx","Components/SongItem.jsx","Components/SongsList.jsx","Components/ArtistsList.jsx","Service/SongsService.js","Pages/SongsPage.jsx","App.js","index.js"],"names":["SearchForm","onSubmit","useForm","register","handleSubmit","errors","className","form","htmlFor","placeholder","name","innerRef","sm","size","order","offset","theme","type","onClick","LyricsModal","open","lyrics","artist","toggle","SongItem","song","title","artistImage","relevancy","useState","showModal","setShowModal","toggleModal","phrases","split","map","phrase","src","SongsList","songs","totalSongs","sorted","setSorted","sortedSongs","useMemo","sort","a","b","showingSongs","checked","onChange","index","ArtistList","artists","console","log","numberOfSongs","image","httpInstance","axios","create","baseURL","SongsPage","setSongs","currentPage","setCurrentPage","history","useHistory","query","URLSearchParams","useLocation","search","get","useEffect","SongsService","params","then","result","data","useCallback","push","artista","titulo","clave","arr","comp","pages","myArray","chunk_size","arrayLength","length","tempArray","myChunk","slice","splitSongs","totalPages","Math","ceil","currentSong","filter","uniqArtists","e","i","final","indexOf","App","class","path","component","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d9fe25c.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport { Container, Row, Col, FormInput, Form, FormGroup,ButtonGroup,Button, FormCheckbox } from \"shards-react\";\r\nimport  \"./SearchForm.css\";\r\n\r\nconst SearchForm = ({onSubmit}) => {\r\n\r\n    const {register, handleSubmit, errors} = useForm()\r\n    return(\r\n    <Container className=\"SearchFormContainer\" >\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Row form>\r\n                <Col ><FormGroup><label htmlFor=\"#artista\">Artista</label><FormInput placeholder=\"Introduce el artista\" name=\"artista\" innerRef={register}/></FormGroup></Col>\r\n                <Col ><label htmlFor=\"#artista\">Titulo</label><FormInput placeholder=\"Introduce el titulo\" name=\"titulo\" innerRef={register}/></Col>\r\n                <Col ><label htmlFor=\"#artista\">Letras</label><FormInput placeholder=\"Introduce letras a buscar\" name=\"clave\" innerRef={register}/></Col>\r\n            </Row>\r\n            <Row><Col sm={{ size: 8, order: 2, offset: 5 }} ><ButtonGroup size=\"sm\" className=\"mr-2\"><Button theme=\"danger\" type=\"reset\" onClick={()=> onSubmit()}>Limpiar</Button><Button theme=\"dark\" >Buscar</Button></ButtonGroup></Col></Row>\r\n        </Form>\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React from 'react';\r\nimport { Button, Modal, ModalBody, ModalHeader } from \"shards-react\";\r\nimport './LyricsModal.css';\r\n\r\n\r\n\r\nconst LyricsModal = ({open, lyrics, artist, toggle}) =>{\r\n  \r\n    return(<div>\r\n        <Modal className={\"Modal\"} open={open} toggle={toggle} >\r\n          <ModalHeader>{artist}</ModalHeader>\r\n          <ModalBody>{lyrics}</ModalBody>\r\n        </Modal>\r\n      </div>)\r\n}\r\n\r\nexport default LyricsModal;","import React,{useState} from 'react';\r\nimport LyricsModal from './LyricsModal';\r\n\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardTitle,\r\n    CardImg,\r\n    CardBody,\r\n    CardFooter,\r\n    Button\r\n  } from \"shards-react\";\r\n\r\n  \r\n\r\n  import './SongItem.css'\r\n\r\nconst SongItem = ({song}) =>{\r\n    const {title, artist, lyrics, artistImage, relevancy} = song;\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const toggleModal = () =>{\r\n        setShowModal(!showModal)\r\n    }\r\n    const phrases = lyrics.split(\"#\");\r\n    \r\n    return(\r\n        <>\r\n        <LyricsModal open={showModal} lyrics={phrases.map(phrase => <p>{phrase}</p>)} artist={artist}  toggle={toggleModal}/>\r\n        <Card className={\"SongItem\"}>\r\n        <CardHeader></CardHeader>\r\n        <CardImg src={artistImage} />\r\n        <CardBody>\r\n          <CardTitle>{title}</CardTitle>\r\n          <p>{artist}</p>\r\n          <Button theme=\"dark\" onClick={toggleModal}>Ver letra &rarr;</Button>\r\n        </CardBody>\r\n        <CardFooter>Likes: {relevancy}</CardFooter>\r\n      </Card>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default SongItem;","import React, {useState, useMemo} from 'react';\r\nimport SongItem from './SongItem';\r\nimport { FormCheckbox } from \"shards-react\";\r\n\r\n\r\nimport './SongsList.css'\r\n\r\nconst SongsList = ({songs, totalSongs }) => {\r\n    const [sorted, setSorted] = useState(false);\r\n    const handleSort  = () => setSorted(!sorted)\r\n    \r\n    const sortedSongs = useMemo (()=> {\r\n        const sortedSongs = [...songs]\r\n        return sortedSongs.sort((a,b) => (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0))\r\n    },[songs, sorted]); \r\n\r\n    const showingSongs = sorted ? sortedSongs : songs\r\n    return(\r\n        <div className={\"SongsList\"}>\r\n            \r\n            <div className=\"InfoContainer\"><FormCheckbox toggle checked={sorted} onChange={handleSort}> Ordenar Alfabeticamente</FormCheckbox><span>{`Numero de canciones que satisfacen la busqueda: ${totalSongs}`}</span></div>\r\n            <div className=\"ListContainer\">\r\n            \r\n                {showingSongs.map((song,index) => <SongItem song={song} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongsList;","import React from 'react'\r\nimport './ArtistsList.css'\r\n\r\nconst ArtistList = ({artists}) =>{\r\n    console.log(artists)\r\n\r\n    artists.sort((a,b) => (b.numberOfSongs > a.numberOfSongs) ? 1 : ((a.numberOfSongs > b.numberOfSongs) ? -1 : 0))\r\n    return(\r\n    <div className={\"ArtistsBar\"}>\r\n    <span><b>Apariciones por artista:</b></span>\r\n    <div className={\"ArtistList\"}>\r\n\r\n    {artists.map(artist=>\r\n    <div className={\"ArtistItem\"}>\r\n        <img className={\"ArtistImage\"} src={artist.image}/>\r\n        <div className={\"ArtistInfo\"}>\r\n            <span><b>{artist.artist}</b></span>\r\n            <span>Apariciones: {artist.numberOfSongs}</span>\r\n            </div>\r\n            </div>)}\r\n            \r\n        </div>\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default ArtistList","import axios from 'axios';\r\n\r\nconst httpInstance = axios.create({\r\n    baseURL:'http://localhost:8080/songs'\r\n})\r\n\r\n \r\nexport default httpInstance;","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {SearchForm, SongsList, ArtistsList} from \"../Components/\";\r\nimport SongsService from '../Service/SongsService'\r\nimport { Button } from \"shards-react\";\r\nimport { Link, useLocation, useHistory, useParams,FormCheckbox } from \"react-router-dom\";\r\nimport \"./SongsPage.css\";\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\n\r\n\r\nconst splitSongs = (myArray, chunk_size) => {\r\n    var index = 0;\r\n    var arrayLength = myArray.length;\r\n    var tempArray = [];\r\n    \r\n    for (index = 0; index < arrayLength; index += chunk_size) {\r\n       const myChunk = myArray.slice(index, index+chunk_size);\r\n        tempArray.push(myChunk);\r\n    }\r\n\r\n    return tempArray;\r\n}\r\n\r\nconst filterDuplicated = (arr, comp) =>{\r\n\r\n    // store the comparison  values in array\r\nconst unique =  arr.map(e => e[comp])\r\n\r\n  // store the indexes of the unique objects\r\n  .map((e, i, final) => final.indexOf(e) === i && i)\r\n\r\n  // eliminate the false indexes & return unique objects\r\n .filter((e) => arr[e]).map(e => arr[e]);\r\n\r\nreturn unique;\r\n}\r\n\r\n\r\nconst SongsPage = ({}) => {\r\n    const [songs, setSongs] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const history = useHistory();\r\n    const query = useQuery();\r\n    const artist = query.get(\"artist\")\r\n    const title = query.get(\"title\")\r\n    const lyrics = query.get(\"lyrics\")\r\n    \r\n   \r\n   useEffect(()=>{\r\n        SongsService.get(\"\",{params:{artist,title,lyrics}}).then(result=> {\r\n     \r\n            setSongs(result.data)\r\n        })\r\n    },[artist,title,lyrics,currentPage])\r\n\r\n    \r\n    const handleSubmit = useCallback((data) => {\r\n        setCurrentPage(0)\r\n        history.push(`?artist=${data?.artista || \"\"}&title=${data?.titulo || \"\"}&lyrics=${data?.clave || \"\"}`)\r\n        },[])\r\n\r\n\r\n\r\n\r\n    const handleNextPage = () => {\r\n        setCurrentPage(currentPage+1)\r\n    }\r\n    console.log(songs)\r\n    const handlePreviousPage = () => {\r\n        setCurrentPage(currentPage-1)\r\n    }\r\n    const pages = splitSongs(songs,12)\r\n    const totalPages = Math.ceil(songs.length/12);\r\n    \r\n    const artists = songs.map(currentSong => ({artist:currentSong.artist, image:currentSong.artistImage, numberOfSongs: songs.filter(song => song.artist === currentSong.artist).length}))\r\n    const uniqArtists  = filterDuplicated(artists,\"artist\")\r\n   \r\n    return(\r\n        <div className={\"SongsPage\"}>\r\n            \r\n            <SearchForm onSubmit={handleSubmit} />\r\n            <div className={\"ListsContainer\"}>\r\n            \r\n            <SongsList songs={ pages[currentPage] || [] } totalSongs={songs.length}  ></SongsList>\r\n            <ArtistsList artists={uniqArtists}></ArtistsList>\r\n            </div>\r\n            <div className=\"ButtonContainer\">\r\n                { currentPage > 0 && <Button  theme=\"dark\" onClick={handlePreviousPage}>Anterior</Button>}\r\n                { currentPage +1 < totalPages && <Button  theme=\"dark\" onClick={handleNextPage}>Siguiente</Button>}\r\n            </div>\r\n           \r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default SongsPage;","import SongsPage from './Pages/SongsPage'\nimport { Alert } from \"shards-react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport {  BrowserRouter as Router, Switch, Route, Redirect}  from 'react-router-dom';\nimport \"./App.css\";\nfunction App() {\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <h1 class='title'>LyFind.</h1>\n      <Route path=\"/songs\" component={SongsPage}/>\n      <Route path=\"/\" component={SongsPage}><Redirect to=\"/songs\" /></Route>\n    </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}